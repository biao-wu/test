# Generated by Django 2.1.4 on 2020-04-30 08:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=11, verbose_name='电话')),
                ('nickname', models.CharField(blank=True, max_length=32, null=True, verbose_name='昵称')),
                ('des', models.CharField(blank=True, max_length=300, null=True, verbose_name='个性签名')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devName', models.CharField(max_length=32, verbose_name='设备名称')),
                ('devNum', models.CharField(max_length=32, verbose_name='设备编号')),
                ('devDate', models.DateTimeField(max_length=32, verbose_name='设备日期')),
                ('devSIM', models.CharField(max_length=100, verbose_name='SIM卡号')),
                ('devUse', models.BooleanField(verbose_name='是否正在使用')),
                ('devLocation', models.CharField(max_length=100, verbose_name='位置')),
                ('devAdmin', models.CharField(blank=True, max_length=32, null=True, verbose_name='维护人员')),
                ('cTime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '设备',
                'verbose_name_plural': '设备',
                'ordering': ['devNum'],
            },
        ),
        migrations.CreateModel(
            name='InfoShares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shareName', models.CharField(max_length=32, verbose_name='发布人员')),
                ('contents', models.CharField(max_length=200, verbose_name='内容')),
                ('cTime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='创建时间')),
                ('imgSrc', models.ImageField(blank=True, null=True, upload_to='img')),
            ],
            options={
                'verbose_name': '信息分享',
                'verbose_name_plural': '信息分享',
                'ordering': ['shareName'],
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户名')),
                ('lastLoginTime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='上次登录时间')),
                ('lastLoginIp', models.CharField(blank=True, max_length=32, null=True, verbose_name='上次登录IP')),
                ('nowLoginTime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='本次登录时间')),
                ('nowLoginIp', models.CharField(blank=True, max_length=32, null=True, verbose_name='本次登录IP')),
            ],
            options={
                'verbose_name': '日志',
                'verbose_name_plural': '日志',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='OperationLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.CharField(max_length=64, verbose_name='管理员')),
                ('opa', models.CharField(max_length=100, null=True, verbose_name='操作记录')),
                ('cTime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': '操作日志',
                'verbose_name_plural': '操作日志',
                'ordering': ['admin'],
            },
        ),
        migrations.CreateModel(
            name='WaterSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siteName', models.CharField(max_length=32, verbose_name='站点名称')),
                ('PH', models.CharField(max_length=32, verbose_name='PH')),
                ('NTU', models.CharField(max_length=32, verbose_name='浑浊度')),
                ('oxygen', models.CharField(max_length=32, verbose_name='溶解氧')),
                ('tem', models.CharField(max_length=32, verbose_name='水温')),
                ('ele', models.CharField(max_length=32, verbose_name='电导率')),
                ('chlorine', models.CharField(max_length=32, verbose_name='余氯')),
                ('site', models.IntegerField(choices=[(1, '正常'), (2, '异常'), (0, '离线')], verbose_name='站点状态')),
                ('cTime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='上报日期')),
            ],
            options={
                'verbose_name': '水质站点信息',
                'verbose_name_plural': '水质站点信息',
            },
        ),
    ]
